//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Booking.Business.NotificatorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificatorService.INotificacionService")]
    public interface INotificacionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificacionService/EnviaCorreo", ReplyAction="http://tempuri.org/INotificacionService/EnviaCorreoResponse")]
        void EnviaCorreo(string correo, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificacionService/EnviaCorreo", ReplyAction="http://tempuri.org/INotificacionService/EnviaCorreoResponse")]
        System.Threading.Tasks.Task EnviaCorreoAsync(string correo, string nombre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificacionServiceChannel : Booking.Business.NotificatorService.INotificacionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificacionServiceClient : System.ServiceModel.ClientBase<Booking.Business.NotificatorService.INotificacionService>, Booking.Business.NotificatorService.INotificacionService {
        
        public NotificacionServiceClient() {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificacionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificacionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void EnviaCorreo(string correo, string nombre) {
            base.Channel.EnviaCorreo(correo, nombre);
        }
        
        public System.Threading.Tasks.Task EnviaCorreoAsync(string correo, string nombre) {
            return base.Channel.EnviaCorreoAsync(correo, nombre);
        }
    }
}
