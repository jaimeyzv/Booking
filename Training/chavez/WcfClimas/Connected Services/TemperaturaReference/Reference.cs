//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClimas.TemperaturaReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperaturaReference.ITemperaturaService")]
    public interface ITemperaturaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaService/ObtenerTemperatura", ReplyAction="http://tempuri.org/ITemperaturaService/ObtenerTemperaturaResponse")]
        int ObtenerTemperatura();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperaturaService/ObtenerTemperatura", ReplyAction="http://tempuri.org/ITemperaturaService/ObtenerTemperaturaResponse")]
        System.Threading.Tasks.Task<int> ObtenerTemperaturaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemperaturaServiceChannel : WcfClimas.TemperaturaReference.ITemperaturaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperaturaServiceClient : System.ServiceModel.ClientBase<WcfClimas.TemperaturaReference.ITemperaturaService>, WcfClimas.TemperaturaReference.ITemperaturaService {
        
        public TemperaturaServiceClient() {
        }
        
        public TemperaturaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperaturaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperaturaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ObtenerTemperatura() {
            return base.Channel.ObtenerTemperatura();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerTemperaturaAsync() {
            return base.Channel.ObtenerTemperaturaAsync();
        }
    }
}
